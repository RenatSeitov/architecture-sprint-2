version: '3'

services:
  mongodb1:
    container_name: mongodb1
    image: dh-mirror.gitverse.ru/mongo:latest
    volumes:
      - mongodb1_data_container:/data/db
    command: [ "--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:
        ipv4_address: 173.17.0.10

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1-data:/data/db
    command: [ "--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:
        ipv4_address: 173.17.0.8

  shard1_replica:
    image: mongo:latest
    container_name: shard1_replica
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - shard1-replica-data:/data/db
    command: [ "--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27021" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:
        ipv4_address: 173.17.0.9

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2-data:/data/db
    command: [ "--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27019" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:
        ipv4_address: 173.17.0.6

  shard2_replica:
    image: mongo:latest
    container_name: shard2_replica
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - shard2-replica-data:/data/db
    command: [ "--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27022" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:
        ipv4_address: 173.17.0.7

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    command: [ "mongos", "--configdb", "config_server/mongodb1:27017", "--bind_ip_all", "--port", "27020" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: mongo-sharding-repl
    build:
      context: mongo-sharding-repl
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongodb1
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongodb1"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  mongodb1_data_container:
  shard1-data:
  shard1-replica-data:
  shard2-data:
  shard2-replica-data:
